name: Pipeline-CI
on:
    push:
        branches: [main]

permissions:
    contents: read
    pull-requests: read

jobs:
    ci:
        runs-on: ubuntu-latest
        continue-on-error: false
        services:
            mysql:
                image: mysql:latest
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: true
                    MYSQL_DATABASE: webapp_test
                    MYSQL_USER: symfony
                    MYSQL_PASSWORD: password
                ports:
                    - 3306/tcp
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3
        strategy:
            matrix:
                operating-system: [ubuntu-latest]
                php-versions: ["8.1"]
                dependency-stability: ["prefer-stable"]

        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            # https://github.com/shivammathur/setup-php (community)
            - name: Setup PHP, extensions and composer with shivammathur/setup-php
              uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
              with:
                  php-version: "8.1"
                  extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, curl, libxml, zip, pcntl, sqlite, pdo_sqlite, bcmath, soap, intl, exif,

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.test', '.env');"
            - name: Install Dependencies
              if: steps.vendor-cache.outputs.cache-hit != 'true'
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: Update Dependencies with latest stable
              if: matrix.dependency-stability == 'prefer-stable'
              run: composer update --prefer-stable
            - name: Update Dependencies with lowest stable
              if: matrix.dependency-stability == 'prefer-lowest'
              run: composer update --prefer-stable --prefer-lowest

            # Install Symfony CLI
            - name: Symfony CLI
              run: |
                  curl -sS https://get.symfony.com/cli/installer | bash
                  mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony

            - name: Check out repository
              uses: actions/checkout@v2

            - name: Install Node.js 18.x
              uses: actions/setup-node@v2
              with:
                  node-version: "18.x"

            - name: Installer les paquets Node.js de Symfony
              run: npm ci && npm run build

            - name: Configurer Mailtrap
              env:
                  MAILTRAP_USER: ${{ secrets.MAILTRAP_USER }}
                  MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
              run: |
                  php -r "file_put_contents('.env.test.local', 'MAILER_DSN=smtp://$MAILTRAP_USER:$MAILTRAP_PASSWORD@sandbox.smtp.mailtrap.io:2525?encryption=tls&auth_mode=login');"
                  php -r "file_put_contents('.env.test', 'MAILER_DSN=smtp://$MAILTRAP_USER:$MAILTRAP_PASSWORD@sandbox.smtp.mailtrap.io:2525?encryption=tls&auth_mode=login');"

            # Check vulnerabilities
            - name: Symfony Check Vulnerabilities
              run: symfony check:security

            # PHP CS FIXER
            - name: PHP-CS-Fixer
              uses: docker://jakzal/phpqa:php8.2-alpine
              with:
                  args: php-cs-fixer --dry-run --allow-risky=yes --no-interaction --ansi fix

            # PHP STAN
            - name: PHP Stan
              run: |
                  ./vendor/bin/simple-phpunit install
                  composer require phpstan/phpstan
                  composer require phpstan/extension-installer
                  composer config --no-plugins allow-plugins.phpstan/extension-installer true
                  composer require phpstan/phpstan-symfony
                  ./vendor/bin/phpstan analyse src --memory-limit 1G

            - name: Lint YAML files
              run: ./bin/console lint:yaml config --parse-tags

            - name: Lint Twig templates
              run: ./bin/console lint:twig templates --env=prod

            - name: Lint Parameters and Services
              run: ./bin/console lint:container --no-debug

            - name: Lint Doctrine entities
              run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

            - name: Run Migration && Fixtures
              run: |
                  composer require --dev symfony/orm-pack
                  php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
                  php bin/console doctrine:migrations:migrate --no-interaction --env=test || echo "No migrations found or migration failed"
                  php bin/console doctrine:fixtures:load --no-interaction --env=test
              env:
                  DATABASE_URL: mysql://root:password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/webapp

            - name: PHP Unit
              env:
                  DATABASE_URL: mysql://root:password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/webapp
              run: ./bin/phpunit --testdox
