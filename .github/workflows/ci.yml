name: Pipeline-CI
on:
    push:
        branches: [main]

permissions:
    contents: read
    # Needed for the 'trilom/file-changes-action' action
    pull-requests: read

jobs:
    ci:
        runs-on: ubuntu-latest
        continue-on-error: false
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            # https://github.com/shivammathur/setup-php (community)
            - name: Setup PHP, extensions and composer with shivammathur/setup-php
              uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
              with:
                  php-version: "8.1"
                  extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

            - name: Copy .env.test
              run: cp .env.test.local .env

            - name: Cache multiple paths
              uses: actions/cache@v2
              with:
                  path: |
                      vendor
                  key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

            - name: "Composer install"
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            # Install Symfony CLI
            - name: Symfony CLI
              run: |
                  curl -sS https://get.symfony.com/cli/installer | bash
                  mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony
            # Check vulnerabilities
            - name: Symfony Check Vulnerabilities
              run: symfony check:security
            # Create Database
            - name: Create Database
              run: |
                  mkdir -p data
                  touch data/database.sqlite
            # PHP CS FIXER
            - name: PHP-CS-Fixer
              run: |
                  composer require friendsofphp/php-cs-fixer
                  ./vendor/bin/php-cs-fixer fix
            # PHP STAN
            - name: PHP Stan
              run: |
                  ./vendor/bin/simple-phpunit install
                  composer require phpstan/phpstan
                  composer require phpstan/extension-installer
                  composer config --no-plugins allow-plugins.phpstan/extension-installer true
                  composer require phpstan/phpstan-symfony
                  ./vendor/bin/phpstan analyse src --memory-limit 1G
            - name: Lint YAML files
              run: ./bin/console lint:yaml config --parse-tags

            - name: Lint Twig templates
              run: ./bin/console lint:twig templates --env=prod

            - name: Lint Parameters and Services
              run: ./bin/console lint:container --no-debug

            - name: Lint Doctrine entities
              run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

            # - name: Execute tests (Unit and Feature tests) via PHPUnit
            #   env:
            #       DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
            #   run: vendor/bin/phpunit
            - name: PHP Unit
              env:
                  DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
              run: |
                  ./bin/console doctrine:database:create
                  ./bin/console doctrine:migrations:migrate
                  ./bin/console doctrine:fixtures:load
                  ./bin/phpunit
              #   ./bin/console doctrine:database:create --if-not-exists
              #   ./bin/console doctrine:migrations:migrate --env=test
              #   ./bin/console doctrine:fixtures:load --env=test
